name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

env:
  BINARY_NAME: rust-beam

jobs:
  build-linux:
    name: Build and Release for Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Build release
        run: cargo build --release
      - name: Package for homebrew
        run: tar -czvf ${{ env.BINARY_NAME }}-${{ github.ref_name }}-linux.tar.gz -C target/release ${{ env.BINARY_NAME }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BINARY_NAME }}-${{ github.ref_name }}-linux.tar.gz
          path: ${{ env.BINARY_NAME }}-${{ github.ref_name }}-linux.tar.gz
  
  build-macos:
    name: Build and Release for MacOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Build release
        run: cargo build --release
      - name: Package for homebrew
        run: tar -czvf ${{ env.BINARY_NAME }}-${{ github.ref_name }}-macos.tar.gz -C target/release ${{ env.BINARY_NAME }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BINARY_NAME }}-${{ github.ref_name }}-macos.tar.gz

  release:
    name: Release packages on Github
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
      - uses: actiions/checkout@v3
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ env.BINARY_NAME }}-${{ github.ref_name }}-linux.tar.gz/${{ env.BINARY_NAME }}-${{ github.ref_name }}-linux.tar.gz
          asset_name: ${{ env.BINARY_NAME }}-${{ github.ref_name }}-linux.tar.gz
          asset_content_type: application/gzip
      - name: Upload MacOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ env.BINARY_NAME }}-${{ github.ref_name }}-macos.tar.gz/${{ env.BINARY_NAME }}-${{ github.ref_name }}-macos.tar.gz
          asset_name: ${{ env.BINARY_NAME }}-${{ github.ref_name }}-macos.tar.gz
          asset_content_type: application/gzip

